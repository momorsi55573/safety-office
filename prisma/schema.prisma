// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  role Role
  company String
  userName String @unique
  password String
  Permits  Permit[]
}

model Permit {
  tests test[]
  extnds extend[]
  renewals renew[]
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  startDate String 
  endDate String 
  startAt String 
  expiredAt String 
  ids String[]
  imagpath String[]
  permitType String
  status String
  issuedTo String
  area String
  location String
  equipments String?
  description String?
  documents String[] 
  mandatoryPPE String[]
  additionalPPE String[] 
  siteCondition String[] 
  additionalSafty String?
  workPlaceInspected String?
  equipmentsInspected String?
  riskAssessmentDiscussed String?
  PPEGood String?
  workSteps String?
  hardBreakat String?
  laborsGood String?
  dangerMeeting String?
  fireFightersExist String?
  noConflict String?
  isolated String?
  dealtWithPoisioned String?
  markers String?
  watcherName String?
  numOfWorkers Int?
  desOfConfinedSpace String?
  voltage String?
  hazardsOfWork String[]
  measuresTaken String[]
  confinedSpacePartOfSystem String?
  connectedElectrical String?
  gasTest String?
  forcedVentilation String?
  confinedTraning String?
  confinedAccess String?
  confinedBurning String?
  electricitySupply String?
  adequateLighting String?
  watchman String?
  confinedAdditionalPPE String?
  confinedEntryPremited String[]
  power String?
  earthingProvided String?
  voltageDetection String?
  loto String?
  exLength String?
  exWidth String?
  exDepth String?
  constructionRep String?
  subConstructionRep String?
  HSERep String?
  subHSERep String?
  PTWCordinator String?
  user User @relation(fields: [issuedBy], references: [id])
  issuedBy String @db.ObjectId
}

model test {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  testDate String
  testTime String
  testDetectorName String
  testLEL String
  testO2 String
  testCO String
  testH2S String
  permit Permit @relation(fields: [per], references: [id])
  per String @db.ObjectId
}

model extend {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  permit Permit @relation(fields: [per], references: [id])
  per String @db.ObjectId
  expiredAt String
  constructionRep String?
  subConstructionRep String?
  HSERep String?
  subHSERep String?
  PTWCordinator String?
}

model renew {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  permit Permit @relation(fields: [per], references: [id])
  per String @db.ObjectId
  endDate String
  constructionRep String?
  subConstructionRep String?
  HSERep String?
  subHSERep String?
  PTWCordinator String?
}

enum Role {
    Officer
    Admin 
    Moderator
    ENG
  }



